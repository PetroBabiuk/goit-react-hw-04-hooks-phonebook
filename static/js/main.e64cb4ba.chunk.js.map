{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","input","type","id","pattern","title","required","onChange","button","Component","Filter","inputId","labeltId","ContactListItem","onDelete","item","onClick","ContactList","contacts","onDeleteContact","list","map","App","filter","changeFilter","addContact","foundNames","contact","toLocaleLowerCase","lowerName","includes","alert","deleteContact","contactId","prevState","getVisibleContacts","lowerCasedFilter","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e64cb4ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","import { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    nameInputId = shortid.generate();\n    numberInputId = shortid.generate();\n\n    handleChange = (evt) => {\n        const { name, value } = evt.currentTarget;\n\n        this.setState({\n         [name]: value,\n        });\n    };\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className={s.form}>\n                <label className={s.label} htmlFor={this.nameInputId}>Name</label>\n                <input\n                    className={s.input}\n                    value={this.state.name}\n                    type=\"text\"\n                    name=\"name\"\n                    id={this.nameInputId}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={this.handleChange}\n                />\n\n                <label className={s.label} htmlFor={this.numberInputId}>Number</label>\n                <input\n                    className={s.input} \n                    value={this.state.number}\n                    type=\"tel\"\n                    name=\"number\"\n                    id={this.numberInputId}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={this.handleChange}\n                />\n                \n                <button\n                className={s.button}\n                    type=\"submit\"\n                >\n                    Add contact\n                </button>\n            </form>\n        );\n    };\n};\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst Filter = ({value, onChange}) => {\n    const inputId = shortid.generate();\n    const labeltId = shortid.generate();\n    return (\n    <>\n        <div className={s.form}>\n            <label htmlFor={labeltId} className={s.label}> Find contacts by name</label>\n            <input className={s.input} id={inputId} type=\"text\" value={value} onChange={onChange}/>\n        </div>\n    </>\n    )\n}    \n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ name, number, onDelete }) => (\n    <li className={s.item}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <button type=\"button\" onClick={onDelete}>Delete</button>\n    </li>\n\n);\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import ContactListItem from './ContactListItem';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({contacts, onDeleteContact}) => (\n    <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n            <ContactListItem\n                key={id}\n                name={name}\n                number={number}\n                onDelete={() => onDeleteContact(id)}\n            />\n        ))}\n        \n    </ul>\n);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import React, {Component} from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  static propTypes = {};\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  changeFilter = (evt) => {\n    this.setState({filter: evt.currentTarget.value});\n  };\n\n  addContact = ({ name, number }) => {\n    const foundNames = this.state.contacts.map(contact => contact.name.toLocaleLowerCase());\n    const lowerName = name.toLocaleLowerCase();\n    if(foundNames.includes(lowerName)){\n     return alert(`${name} is already in contacts`);\n    }\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n  \n      this.setState(({contacts})=> ({\n        contacts: [contact, ...contacts],\n      }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const {filter, contacts} = this.state;\n    const lowerCasedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(lowerCasedFilter))\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n    \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1 className=\"text\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className=\"text\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n      </div>\n    )}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\"};"],"sourceRoot":""}